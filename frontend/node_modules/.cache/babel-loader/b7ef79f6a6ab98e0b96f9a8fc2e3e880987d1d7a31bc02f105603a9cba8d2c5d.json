{"ast":null,"code":"var _jsxFileName = \"/Users/liamjogal/Desktop/Software Development/Personal Projects/financial_securities/frontend/src/components/dropdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchDropdown = props => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [results, setResults] = useState([]);\n  const handleSearch = event => {\n    const {\n      value\n    } = event.target;\n    setSearchTerm(value);\n\n    // Perform your search logic here and update the 'results' state\n    // based on the search term.\n    // You can use APIs or any other method to fetch the search results.\n\n    // Example: Mocked search results\n    const mockResults = ['Result 1', 'Result 2', 'Result 3'];\n    setResults(mockResults.filter(result => result.toLowerCase().includes(value.toLowerCase())));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Search\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), searchTerm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-menu show\",\n      \"aria-labelledby\": \"dropdownMenuButton\",\n      children: results.length > 0 ? results.map((result, index) => /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"dropdown-item\",\n        href: \"#\",\n        children: result\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"dropdown-item disabled\",\n        href: \"#\",\n        children: \"No results found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchDropdown, \"F0bopYfEF/j1/KEMRiNxHM8O8oM=\");\n_c = SearchDropdown;\nexport default SearchDropdown;\nvar _c;\n$RefreshReg$(_c, \"SearchDropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchDropdown","props","_s","searchTerm","setSearchTerm","results","setResults","handleSearch","event","value","target","mockResults","filter","result","toLowerCase","includes","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","href","_c","$RefreshReg$"],"sources":["/Users/liamjogal/Desktop/Software Development/Personal Projects/financial_securities/frontend/src/components/dropdown.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst SearchDropdown = (props) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [results, setResults] = useState([]);\n\n  const handleSearch = (event) => {\n    const { value } = event.target;\n    setSearchTerm(value);\n\n    // Perform your search logic here and update the 'results' state\n    // based on the search term.\n    // You can use APIs or any other method to fetch the search results.\n\n    // Example: Mocked search results\n    const mockResults = ['Result 1', 'Result 2', 'Result 3'];\n    setResults(mockResults.filter(result => result.toLowerCase().includes(value.toLowerCase())));\n  };\n\n  return (\n    <div className=\"dropdown\">\n      <input\n        type=\"text\"\n        className=\"form-control\"\n        placeholder=\"Search\"\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      {searchTerm && (\n        <div className=\"dropdown-menu show\" aria-labelledby=\"dropdownMenuButton\">\n          {results.length > 0 ? (\n            results.map((result, index) => (\n              <a className=\"dropdown-item\" href=\"#\" key={index}>\n                {result}\n              </a>\n            ))\n          ) : (\n            <a className=\"dropdown-item disabled\" href=\"#\">\n              No results found.\n            </a>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchDropdown;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MAAEC;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9BN,aAAa,CAACK,KAAK,CAAC;;IAEpB;IACA;IACA;;IAEA;IACA,MAAME,WAAW,GAAG,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC;IACxDL,UAAU,CAACK,WAAW,CAACC,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,KAAK,CAACK,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9F,CAAC;EAED,oBACEf,OAAA;IAAKiB,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBlB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXF,SAAS,EAAC,cAAc;MACxBG,WAAW,EAAC,QAAQ;MACpBV,KAAK,EAAEN,UAAW;MAClBiB,QAAQ,EAAEb;IAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,EACDrB,UAAU,iBACTJ,OAAA;MAAKiB,SAAS,EAAC,oBAAoB;MAAC,mBAAgB,oBAAoB;MAAAC,QAAA,EACrEZ,OAAO,CAACoB,MAAM,GAAG,CAAC,GACjBpB,OAAO,CAACqB,GAAG,CAAC,CAACb,MAAM,EAAEc,KAAK,kBACxB5B,OAAA;QAAGiB,SAAS,EAAC,eAAe;QAACY,IAAI,EAAC,GAAG;QAAAX,QAAA,EAClCJ;MAAM,GADkCc,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE7C,CACJ,CAAC,gBAEFzB,OAAA;QAAGiB,SAAS,EAAC,wBAAwB;QAACY,IAAI,EAAC,GAAG;QAAAX,QAAA,EAAC;MAE/C;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACJ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACtB,EAAA,CA3CIF,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AA6CpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}