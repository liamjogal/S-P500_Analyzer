{"ast":null,"code":"var _s = $RefreshSig$();\nimport { Label, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chart(props) {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [x, setX] = useState(null);\n  const [y, setY] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/chart/AAPL?rang=ytd\");\n        const jsonData = await response.json();\n        setData(jsonData);\n        setX(jsonData[\"timestamps\"]);\n        setY(jsonData[\"stats\"]);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  console.log(data);\n  console.log(x);\n  console.log(y);\n\n  //   const CustomTooltip = ({ active, payload, label }) => {\n  //     if (active && payload && payload.length) {\n  //       return (\n  //         <div className=\"custom-tooltip\">\n  //           <p className=\"label\">{`${moment(label).format(\"MM-DD-YY\")} : ${\n  //             payload[0].value + \" lbs\"\n  //           }`}</p>\n  //         </div>\n  //       );\n  //     }\n  //   };\n\n  //   return (\n  //     <ResponsiveContainer width=\"100%\" height={400}>\n  //       <LineChart width={500} height={300} data={propsCopy.data}>\n  //         <XAxis type=\"date\" dataKey=\"numdate\" name=\"date\" scale=\"time\" hasTick>\n  //           <Label value=\"Date\" position=\"bottom\" />\n  //         </XAxis>\n  //         <YAxis>\n  //           <Label value=\"Price\" angle={-90} position=\"insideLeft\" />\n  //         </YAxis>\n  //         <Tooltip\n  //           content={<CustomTooltip />}\n  //           cursor={{ strokeDasharray: \"3 3\" }}\n  //         />\n  //         <CartesianGrid />\n  //         <Line type=\"monotone\" dataKey=\"weight\" unit=\"lbs\" stroke=\"blue\" />\n  //       </LineChart>\n  //     </ResponsiveContainer>\n  //   );\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Chart, \"FTXgideMCbBVvK16LUlmf/igG8Q=\");\n_c = Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["Label","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","useState","useEffect","moment","Fragment","_Fragment","jsxDEV","_jsxDEV","Chart","props","_s","data","setData","loading","setLoading","x","setX","y","setY","fetchData","response","fetch","jsonData","json","error","console","log","_c","$RefreshReg$"],"sources":["/Users/liamjogal/Desktop/Software Development/Personal Projects/financial_securities/frontend/src/components/chart.js"],"sourcesContent":["import {\n  Label,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { useState, useEffect } from \"react\";\n\nimport moment from \"moment\";\n\nexport default function Chart(props) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [x, setX] = useState(null);\n  const [y, setY] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          \"http://127.0.0.1:8000/chart/AAPL?rang=ytd\"\n        );\n        const jsonData = await response.json();\n        setData(jsonData);\n        setX(jsonData[\"timestamps\"]);\n        setY(jsonData[\"stats\"]);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  console.log(data);\n  console.log(x);\n  console.log(y);\n\n  //   const CustomTooltip = ({ active, payload, label }) => {\n  //     if (active && payload && payload.length) {\n  //       return (\n  //         <div className=\"custom-tooltip\">\n  //           <p className=\"label\">{`${moment(label).format(\"MM-DD-YY\")} : ${\n  //             payload[0].value + \" lbs\"\n  //           }`}</p>\n  //         </div>\n  //       );\n  //     }\n  //   };\n\n  //   return (\n  //     <ResponsiveContainer width=\"100%\" height={400}>\n  //       <LineChart width={500} height={300} data={propsCopy.data}>\n  //         <XAxis type=\"date\" dataKey=\"numdate\" name=\"date\" scale=\"time\" hasTick>\n  //           <Label value=\"Date\" position=\"bottom\" />\n  //         </XAxis>\n  //         <YAxis>\n  //           <Label value=\"Price\" angle={-90} position=\"insideLeft\" />\n  //         </YAxis>\n  //         <Tooltip\n  //           content={<CustomTooltip />}\n  //           cursor={{ strokeDasharray: \"3 3\" }}\n  //         />\n  //         <CartesianGrid />\n  //         <Line type=\"monotone\" dataKey=\"weight\" unit=\"lbs\" stroke=\"blue\" />\n  //       </LineChart>\n  //     </ResponsiveContainer>\n  //   );\n  return <></>;\n}\n"],"mappings":";AAAA,SACEA,KAAK,EACLC,SAAS,EACTC,IAAI,EACJC,KAAK,EACLC,KAAK,EACLC,aAAa,EACbC,OAAO,EACPC,mBAAmB,QACd,UAAU;AACjB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAOC,MAAM,MAAM,QAAQ;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,CAAC,EAAEC,IAAI,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAChC,MAAM,CAACgB,CAAC,EAAEC,IAAI,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAChCC,SAAS,CAAC,MAAM;IACd,MAAMiB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2CACF,CAAC;QACD,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QACtCX,OAAO,CAACU,QAAQ,CAAC;QACjBN,IAAI,CAACM,QAAQ,CAAC,YAAY,CAAC,CAAC;QAC5BJ,IAAI,CAACI,QAAQ,CAAC,OAAO,CAAC,CAAC;QACvBR,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENM,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC;EACjBc,OAAO,CAACC,GAAG,CAACX,CAAC,CAAC;EACdU,OAAO,CAACC,GAAG,CAACT,CAAC,CAAC;;EAEd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBAAOV,OAAA,CAAAF,SAAA,mBAAI,CAAC;AACd;AAACK,EAAA,CA3DuBF,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}