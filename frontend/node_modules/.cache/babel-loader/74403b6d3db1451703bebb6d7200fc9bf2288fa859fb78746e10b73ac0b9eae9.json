{"ast":null,"code":"var _jsxFileName = \"/Users/liamjogal/Desktop/Software Development/Personal Projects/financial_securities/frontend/src/components/chart.js\",\n  _s = $RefreshSig$();\nimport { Label, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chart(props) {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [x, setX] = useState(null);\n  const [y, setY] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://127.0.0.1:8000/chart/AAPL?rang=ytd\");\n        const jsonData = await response.json();\n        var arrdata = [];\n        for (let i = 0; i < jsonData[\"timestamps\"].length; i++) {\n          const currenttime = jsonData[\"timestamps\"][i];\n          const currentstat = jsonData[\"stats\"][i];\n          arrdata.push({\n            timestamp: currenttime,\n            stat: currentstat\n          });\n          console.log(currentItem);\n        }\n        setData(arrdata);\n        setX(jsonData[\"timestamps\"]);\n        setY(jsonData[\"stats\"]);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  console.log(data);\n  console.log(x);\n  console.log(y);\n\n  //   const CustomTooltip = ({ active, payload, label }) => {\n  //     if (active && payload && payload.length) {\n  //       return (\n  //         <div className=\"custom-tooltip\">\n  //           <p className=\"label\">{`${moment(label).format(\"MM-DD-YY\")} : ${\n  //             payload[0].value + \" lbs\"\n  //           }`}</p>\n  //         </div>\n  //       );\n  //     }\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 500,\n      height: 300,\n      data: data,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        type: \"date\",\n        dataKey: \"timestamp\",\n        name: \"date\",\n        scale: \"time\",\n        hasTick: true,\n        children: /*#__PURE__*/_jsxDEV(Label, {\n          value: \"Date\",\n          position: \"bottom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        dataKey: \"stat\",\n        children: /*#__PURE__*/_jsxDEV(Label, {\n          value: \"Price\",\n          angle: -90,\n          position: \"insideLeft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"weight\",\n        unit: \"lbs\",\n        stroke: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Chart, \"FTXgideMCbBVvK16LUlmf/igG8Q=\");\n_c = Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["Label","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","useState","useEffect","moment","jsxDEV","_jsxDEV","Fragment","_Fragment","Chart","props","_s","data","setData","loading","setLoading","x","setX","y","setY","fetchData","response","fetch","jsonData","json","arrdata","i","length","currenttime","currentstat","push","timestamp","stat","console","log","currentItem","error","width","height","children","type","dataKey","name","scale","hasTick","value","position","fileName","_jsxFileName","lineNumber","columnNumber","angle","unit","stroke","_c","$RefreshReg$"],"sources":["/Users/liamjogal/Desktop/Software Development/Personal Projects/financial_securities/frontend/src/components/chart.js"],"sourcesContent":["import {\n  Label,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { useState, useEffect } from \"react\";\n\nimport moment from \"moment\";\n\nexport default function Chart(props) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [x, setX] = useState(null);\n  const [y, setY] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          \"http://127.0.0.1:8000/chart/AAPL?rang=ytd\"\n        );\n        const jsonData = await response.json();\n        var arrdata = [];\n        for (let i = 0; i < jsonData[\"timestamps\"].length; i++) {\n          const currenttime = jsonData[\"timestamps\"][i];\n          const currentstat = jsonData[\"stats\"][i];\n          arrdata.push({ timestamp: currenttime, stat: currentstat });\n\n          console.log(currentItem);\n        }\n        setData(arrdata);\n        setX(jsonData[\"timestamps\"]);\n        setY(jsonData[\"stats\"]);\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  console.log(data);\n  console.log(x);\n  console.log(y);\n\n  //   const CustomTooltip = ({ active, payload, label }) => {\n  //     if (active && payload && payload.length) {\n  //       return (\n  //         <div className=\"custom-tooltip\">\n  //           <p className=\"label\">{`${moment(label).format(\"MM-DD-YY\")} : ${\n  //             payload[0].value + \" lbs\"\n  //           }`}</p>\n  //         </div>\n  //       );\n  //     }\n  //   };\n\n  return (\n    <ResponsiveContainer width=\"100%\" height={400}>\n      <LineChart width={500} height={300} data={data}>\n        <XAxis type=\"date\" dataKey=\"timestamp\" name=\"date\" scale=\"time\" hasTick>\n          <Label value=\"Date\" position=\"bottom\" />\n        </XAxis>\n        <YAxis dataKey=\"stat\">\n          <Label value=\"Price\" angle={-90} position=\"insideLeft\" />\n        </YAxis>\n\n        <CartesianGrid />\n        <Line type=\"monotone\" dataKey=\"weight\" unit=\"lbs\" stroke=\"blue\" />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n  return <></>;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}